use <lib/BOSL/transforms.scad>
$fn=60;

// todo
// extract parameters and use configurator
// compensate for greater width at bottom
// pcb clearance holes
// stabiliser holes
// gap for controller
// mounting for usb
//
//cut into halves (dovetail joint?)
//arrange for printing
//
//
//? add switches and keys?
//
//
//

explode=0;

hole_diameter=3.2;
hole_depth=3;
clearance_hole_diameter=2;
clearance_hole_depth=2;
large_clearance_hole_diameter=5;
large_clearance_hole_depth=2;

pcb_base()
  body()
  /* translate([0,-82,19]) rotate([180,0,0]) body(); */
    pcb();
/* top_holes(); */
/* base_holes(); */


module body(){
  render() {
    difference(){
      rotate([5,0,0]) {
        linear_extrude(height=12, convexity=10){
          difference() {
            hull() projection() pcb();
            offset(-8) hull() projection() pcb();
          }
        };
      }
      translate([0,0,-300]) cube(600, center=true);
      base_holes();
      rotate([5,0,0]) translate([0,0,12-hole_depth]) {
        top_holes();
      };
      rotate([5,0,0]) translate([0,0,12-clearance_hole_depth])
        clearance_holes();
    };
  }
  rotate([5,0,0]) translate([0,0,12+explode]) children();
}

module pcb_base(){
  color("grey") import("pcb_bottom.stl");
  translate([0,0,1.6+explode]) children();
}

module pcb(){
  color("grey") import("pcb.stl");
}


module base_holes(){
  locations=[
    [243.63426,-25.66162,0],
    [28.56992,-26.99258,0],
    [123.825,-26.9875,0],
    [186.53252,-100.0125,0],
    [191.29248,-26.9875,0],
    [105.56748,-100.0125,0],
    [263.525,-100.0125,0],
    [28.575,-100.0125,0],
    [263.525,-26.9875,0],
    [225.8695,-25.61844,0]
  ];
  translate([-19.843750,23.018750,0])
  for(location=locations){
    translate(location) cylinder(h=hole_depth, d=hole_diameter);
  }
}


module top_holes() {

  locations=[
    [126.20752,-29.13126],
    [200.05802,-102.15626],
    [109.57052,-102.15626],
    [277.8125,-28.8925],
    [31.75,-28.8925],
    [32.57804,-102.15626],
    [202.40752,-29.13126],
    [277.05304,-102.15626],
  ];
  translate([-28.575,25.4,0])
  for(location=locations){
    translate(location) cylinder(h=hole_depth, d=hole_diameter);
  }
}

module clearance_holes() {

  locations=[
  //92 switch connections
[127.192,-72.828],
[133.542,-70.288],
[93.855,-34.728],
[100.205,-32.188],
[193.867,-53.778],
[200.217,-51.238],
[39.086,-53.778],
[45.436,-51.238],
[222.442,-72.828],
[228.792,-70.288],
[241.492,-72.828],
[247.842,-70.288],
[112.905,-34.728],
[119.255,-32.188],
[50.992,-91.878],
[57.342,-89.338],
[170.055,-34.728],
[176.405,-32.188],
[155.767,-53.778],
[162.117,-51.238],
[262.923,-72.828],
[269.273,-70.288],
[227.205,-34.728],
[233.555,-32.188],
[146.242,-72.828],
[152.592,-70.288],
[165.292,-72.828],
[171.642,-70.288],
[258.161,-53.778],
[264.511,-51.238],
[131.955,-34.728],
[138.305,-32.188],
[72.423,-91.878],
[78.773,-89.338],
[174.817,-53.778],
[181.167,-51.238],
[117.667,-53.778],
[124.017,-51.238],
[98.617,-53.778],
[104.967,-51.238],
[108.142,-72.828],
[114.492,-70.288],
[212.917,-53.778],
[219.267,-51.238],
[74.805,-34.728],
[81.155,-32.188],
[231.967,-53.778],
[238.317,-51.238],
[36.705,-34.728],
[43.055,-32.188],
[189.105,-34.728],
[195.455,-32.188],
[208.155,-34.728],
[214.505,-32.188],
[184.342,-72.828],
[190.692,-70.288],
[93.855,-91.878],
[100.205,-89.338],
[151.005,-91.878],
[157.355,-89.338],
[246.255,-34.728],
[252.605,-32.188],
[89.092,-72.828],
[95.442,-70.288],
[136.717,-53.778],
[143.067,-51.238],
[70.042,-72.828],
[76.392,-70.288],
[79.567,-53.778],
[85.917,-51.238],
[229.586,-91.878],
[235.936,-89.338],
[208.155,-91.878],
[214.505,-89.338],
[172.436,-91.878],
[178.786,-89.338],
[251.017,-91.878],
[257.367,-89.338],
[124.811,-91.878],
[131.161,-89.338],
[265.305,-34.728],
[271.655,-32.188],
[60.517,-53.778],
[66.867,-51.238],
[55.755,-34.728],
[62.105,-32.188],
[151.005,-34.728],
[157.355,-32.188],
[43.848,-72.828],
[50.198,-70.288],
[203.392,-72.828],
[209.742,-70.288],

//92 switch pcb mounting holes

[125.922,-75.368],
[136.082,-75.368],
[92.585,-37.268],
[102.745,-37.268],
[192.597,-56.318],
[202.757,-56.318],
[37.816,-56.318],
[47.976,-56.318],
[221.172,-75.368],
[231.332,-75.368],
[240.222,-75.368],
[250.382,-75.368],
[111.635,-37.268],
[121.795,-37.268],
[49.722,-94.418],
[59.882,-94.418],
[168.785,-37.268],
[178.945,-37.268],
[154.497,-56.318],
[164.657,-56.318],
[261.653,-75.368],
[271.813,-75.368],
[225.935,-37.268],
[236.095,-37.268],
[144.972,-75.368],
[155.132,-75.368],
[164.022,-75.368],
[174.182,-75.368],
[256.891,-56.318],
[267.051,-56.318],
[130.685,-37.268],
[140.845,-37.268],
[71.153,-94.418],
[81.313,-94.418],
[173.547,-56.318],
[183.707,-56.318],
[116.397,-56.318],
[126.557,-56.318],
[97.347,-56.318],
[107.507,-56.318],
[106.872,-75.368],
[117.032,-75.368],
[211.647,-56.318],
[221.807,-56.318],
[73.535,-37.268],
[83.695,-37.268],
[230.697,-56.318],
[240.857,-56.318],
[35.435,-37.268],
[45.595,-37.268],
[187.835,-37.268],
[197.995,-37.268],
[206.885,-37.268],
[217.045,-37.268],
[183.072,-75.368],
[193.232,-75.368],
[92.585,-94.418],
[102.745,-94.418],
[149.735,-94.418],
[159.895,-94.418],
[244.985,-37.268],
[255.145,-37.268],
[87.822,-75.368],
[97.982,-75.368],
[135.447,-56.318],
[145.607,-56.318],
[68.772,-75.368],
[78.932,-75.368],
[78.297,-56.318],
[88.457,-56.318],
[228.316,-94.418],
[238.476,-94.418],
[206.885,-94.418],
[217.045,-94.418],
[171.166,-94.418],
[181.326,-94.418],
[249.747,-94.418],
[259.907,-94.418],
[123.541,-94.418],
[133.701,-94.418],
[264.035,-37.268],
[274.195,-37.268],
[59.247,-56.318],
[69.407,-56.318],
[54.485,-37.268],
[64.645,-37.268],
[149.735,-37.268],
[159.895,-37.268],
[42.578,-75.368],
[52.738,-75.368],
[202.122,-75.368],
[212.282,-75.368]

  ];
  translate([-28.575,25.4,0])
  for(location=locations){
    translate(location) cylinder(h=clearance_hole_depth, d=clearance_hole_diameter);
  }

  large_clearance_holes();
}


module large_clearance_holes() {

  locations=[
  // holes in the centre of switches and large stabiliser holes

[140.527,-56.318],
[73.852,-75.368],
[83.377,-56.318],
[233.396,-94.418],
[211.965,-94.418],
[164.34,-102.673],
[176.246,-94.418],
[188.152,-102.673],
[254.827,-94.418],
[116.715,-102.673],
[128.621,-94.418],
[140.527,-102.673],
[269.115,-37.268],
[64.327,-56.318],
[59.565,-37.268],
[154.815,-37.268],
[47.658,-75.368],
[207.202,-75.368],
[131.002,-75.368],
[97.665,-37.268],
[197.677,-56.318],
[42.896,-56.318],
[226.252,-75.368],
[245.302,-75.368],
[116.715,-37.268],
[54.802,-94.418],
[173.865,-37.268],
[159.577,-56.318],
[266.733,-75.368],
[231.015,-37.268],
[150.052,-75.368],
[169.102,-75.368],
[261.971,-56.318],
[135.765,-37.268],
[76.233,-94.418],
[178.627,-56.318],
[121.477,-56.318],
[102.427,-56.318],
[111.952,-75.368],
[216.727,-56.318],
[78.615,-37.268],
[235.777,-56.318],
[40.515,-37.268],
[192.915,-37.268],
[211.965,-37.268],
[188.152,-75.368],
[97.665,-94.418],
[97.665,-102.673],
[154.815,-94.418],
[211.965,-102.673],
[250.065,-37.268],
[92.902,-75.368]
  ];
  translate([-28.575,25.4,0])
  for(location=locations){
    translate(location) cylinder(h=large_clearance_hole_depth, d=large_clearance_hole_diameter);
  }
}
